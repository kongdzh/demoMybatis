<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wonders.dao.IUserDao">

    <!--  配置 查询结果的列名和实体类的属性名的对应关系  -->
    <resultMap id="userMap" type="com.wonders.domain.User">
        <id property="username" column="username"></id>
        <id property="address" column="address"></id>
        <id property="sex" column="sex"></id>
        <id property="birthday" column="birthday"></id>
    </resultMap>

    <!--    配置查询所有 , 当结果集配置了resultMap对应关系，就把resultType换成resultMap，如下-->
<!--    <select id="findAll" resultType="com.wonders.domain.User">-->
    <select id="findAll" resultMap="userMap">
        select * from user;
    </select>

    <insert id="saveUser" parameterType="com.wonders.domain.User">
        <!-- 返回插入时自动增长的id -->
        <selectKey keyProperty="id" keyColumn="id" resultType="Integer" order="AFTER">
            select last_insert_id();
        </selectKey>
        insert into user(username, birthday, sex, address) values (#{username}, #{birthday}, #{sex}, #{address});
    </insert>

    <update id="updateUser" parameterType="com.wonders.domain.User">
        update user set username=#{username}, birthday=#{birthday}, sex=#{sex}, address=#{address} where id=#{id};
    </update>

    <delete id="deleteUser" parameterType="Integer">
        delete from user where id=#{id};
    </delete>

    <select id="findByName" parameterType="String" resultType="com.wonders.domain.User">
        select * from user where username like #{name};
    </select>

    <!--    根据queryVo的条件查询 -->
    <select id="findUserByVo" parameterType="com.wonders.domain.QueryVo" resultType="com.wonders.domain.User">
        select * from user where username like #{user.username};
    </select>

    <!--根据不同查询条件查询-->
    <select id="findUserByCondition" resultMap="userMap" parameterType="com.wonders.domain.User">
        select * from user
        <where>
            <if test="username != null">
                and username = #{username}
            </if>
            <if test="address != null">
                and address = #{address}
            </if>
        </where>
    </select>
</mapper>